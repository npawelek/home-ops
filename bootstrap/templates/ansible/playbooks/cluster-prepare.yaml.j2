---
- name: Prepare System
  hosts: kubernetes
  become: true
  gather_facts: true
  any_errors_fatal: true
  pre_tasks:
    - name: Pausing for 5 seconds...
      ansible.builtin.pause:
        seconds: 5
    - name: Populate service facts
      ansible.builtin.service_facts:
  tasks:
    - name: Locale
      block:
        - name: Locale | Set timezone
          community.general.timezone:
            name: "{% raw %}{{ timezone | default('Etc/UTC') }}{% endraw %}"

    - name: Packages
      block:
        - name: Packages | Enable backports for newer kernel
          ansible.builtin.apt_repository:
            repo: "deb http://deb.debian.org/debian bookworm-backports main non-free-firmware"
            state: present
            filename: debian-backports
        - name: Packages | Install
          ansible.builtin.apt:
            name: "{% raw %}{{ packages.base | default([]) }}{% endraw %}"
            install_recommends: false
        - name: Packages | Perform a full-upgrade
          ansible.builtin.apt:
            upgrade: full
        - name: Packages | Remove leaf packages
          ansible.builtin.apt:
            autoremove: true
            clean: true

    - name: Intel Media Packages
      notify: Reboot
      block:
        # https://dgpu-docs.intel.com/driver/client/overview.html#client-intel-package-repository-configuration
        - name: Packages | Install Intel signing key
          ansible.builtin.apt_key:
            url: https://repositories.intel.com/gpu/intel-graphics.key
            state: present
            keyring: /usr/share/keyrings/intel-graphics.gpg
        - name: Packages | Install Intel GPU client repository
          ansible.builtin.apt_repository:
            repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/intel-graphics.gpg] https://repositories.intel.com/gpu/ubuntu jammy client"
            state: present
            filename: intel-gpu
        - name: Packages | Install Intel iGPU packages
          ansible.builtin.apt:
            name: "{% raw %}{{ packages.gpu | default([]) }}{% endraw %}"
            state: latest
            install_recommends: false
      when: "'Intel' in ansible_board_vendor"

    - name: User Configuration
      block:
        - name: User Configuration | SSH keys
          ansible.posix.authorized_key:
            user: "{% raw %}{{ ansible_user }}{% endraw %}"
            key: "https://github.com/{% raw %}{{ github_username }}{% endraw %}.keys"
        - name: User Configuration | Silence login
          ansible.builtin.file:
            dest: "{% raw %}{{ '/home/' + ansible_user if ansible_user != 'root' else '/root' }}{% endraw %}/.hushlogin"
            state: touch
            owner: "{% raw %}{{ ansible_user }}{% endraw %}"
            group: "{% raw %}{{ ansible_user }}{% endraw %}"
            mode: "0644"
            modification_time: preserve
            access_time: preserve

    - name: Network Configuration
      notify: Reboot
      block:
        - name: Network Configuration | Set hostname
          ansible.builtin.hostname:
            name: "{% raw %}{{ inventory_hostname }}{% endraw %}"
        - name: Network Configuration | Update hosts
          ansible.builtin.copy:
            content: |
              127.0.0.1 localhost
              127.0.1.1 {% raw %}{{ inventory_hostname }}{% endraw %}

              # The following lines are desirable for IPv6 capable hosts
              ::1     localhost ip6-localhost ip6-loopback
              ff02::1 ip6-allnodes
              ff02::2 ip6-allrouters
            dest: /etc/hosts
            mode: preserve
        # https://github.com/onedr0p/flux-cluster-template/discussions/635
        - name: Network Configuration | Remove immutable flag from /etc/resolv.conf
          ansible.builtin.file:
            attributes: -i
            path: /etc/resolv.conf
        - name: Network Configuration | Remove /etc/resolv.conf
          ansible.builtin.file:
            attributes: -i
            path: /etc/resolv.conf
            state: absent
        - name: Network Configuration | Add custom /etc/resolv.conf
          ansible.builtin.copy:
            attributes: +i
            mode: '0644'
            dest: /etc/resolv.conf
            content: |
              search .
              nameserver 1.1.1.1

    - name: System Configuration
      notify: Reboot
      block:
        - name: System Configuration | Neofetch
          ansible.builtin.copy:
            dest: /etc/profile.d/neofetch.sh
            mode: "0755"
            content: neofetch --config none
        - name: System Configuration | Disable apparmor
          when: ansible_facts.services['apparmor.service'] is defined
          ansible.builtin.systemd:
            name: apparmor
            state: stopped
            masked: true
        - name: System Configuration | Disable swap
          ansible.posix.mount:
            name: "{% raw %}{{ item }}{% endraw %}"
            fstype: swap
            state: absent
          loop: ["none", "swap"]
        - name: System Configuration | Create Kernel modules
          ansible.builtin.copy:
            dest: "/etc/modules-load.d/{% raw %}{{ item }}{% endraw %}.conf"
            mode: "0644"
            content: "{% raw %}{{ item }}{% endraw %}"
          loop: ["br_netfilter", "ceph", "ip_vs", "ip_vs_rr", "nbd", "overlay", "rbd"]
          register: modules_status
        - name: System Configuration | Reload Kernel modules # noqa: no-changed-when no-handler
          when: modules_status.changed
          ansible.builtin.systemd:
            name: systemd-modules-load
            state: restarted
        - name: System Configuration | Sysctl
          ansible.posix.sysctl:
            name: "{% raw %}{{ item.key }}{% endraw %}"
            value: "{% raw %}{{ item.value }}{% endraw %}"
            sysctl_file: /etc/sysctl.d/99-kubernetes.conf
            reload: true
          with_dict: "{% raw %}{{ sysctl_config }}{% endraw %}"
          vars:
            sysctl_config:
              fs.inotify.max_queued_events: 65536
              fs.inotify.max_user_watches: 524288
              fs.inotify.max_user_instances: 8192
        - name: System Configuration | Ensure htop config path
          ansible.builtin.file:
            path: "{% raw %}{{ item.path }}{% endraw %}/.config/htop"
            state: directory
            owner: "{% raw %}{{ item.user }}{% endraw %}"
            group: "{% raw %}{{ item.user }}{% endraw %}"
            mode: 0700
          loop:
            - { user: "{% raw %}{{ ansible_user }}{% endraw %}", path: "/home/{% raw %}{{ ansible_user }}{% endraw %}" }
            - { user: root, path: /root }
        - name: System Configuration | Drop htoprc config
          ansible.builtin.template:
            src: htoprc.j2
            dest: "{% raw %}{{ item.path }}{% endraw %}/.config/htop/htoprc"
            owner: "{% raw %}{{ item.user }}{% endraw %}"
            group: "{% raw %}{{ item.user }}{% endraw %}"
            mode: 0664
          loop:
            - { user: "{% raw %}{{ ansible_user }}{% endraw %}", path: "/home/{% raw %}{{ ansible_user }}{% endraw %}" }
            - { user: root, path: /root }
        - name: System Configuration | Check CPU scaling governor
          ansible.builtin.command: cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
          changed_when: false
          register: cpu_governor
        - name: System Configuration | Set performance mode
          ansible.builtin.shell: echo performance > /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
          when: cpu_governor.stdout != "performance"
        - name: System Configuration | Ensure cpufrequtils is set to performance
          ansible.builtin.lineinfile:
            path: /etc/init.d/cpufrequtils
            regexp: '^GOVERNOR='
            line: GOVERNOR="performance"
            state: present
          when: cpu_governor.stdout != "performance"
        - name: System Configuration | Validate the sudoers file before saving
          ansible.builtin.lineinfile:
            path: "/etc/sudoers.d/{% raw %}{{ ansible_user }}{% endraw %}"
            state: present
            regexp: "^{% raw %}{{ ansible_user }}{% endraw %} ALL="
            line: "{% raw %}{{ ansible_user }}{% endraw %} ALL=(ALL) NOPASSWD:ALL"
            validate: /usr/sbin/visudo -cf %s

  handlers:
    - name: Reboot
      ansible.builtin.reboot:
        msg: Rebooting nodes
        reboot_timeout: 3600
